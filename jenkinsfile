pipeline {
    agent any
    
    environment {
        // Node version specification
        NODE_VERSION = '20.x'
        
        // Required credentials
        EC2_IP = credentials('EC2_IP_CREDENTIAL')
        SSH_USER = credentials('SSH_USER_CREDENTIAL')
        APP_DIR = credentials('APP_DIR_CREDENTIAL')
        NODE_ENV = 'production'
        
        // Set npm cache directory to workspace
        NPM_CONFIG_CACHE = "${WORKSPACE}/.npm"
    }
    
    stages {
        stage('Setup Environment') {
            steps {
                // Create necessary directories and set permissions
                sh '''
                    mkdir -p ${NPM_CONFIG_CACHE}
                    chmod -R 777 ${NPM_CONFIG_CACHE}
                    
                    # Print environment information
                    echo "Node Version:"
                    node --version
                    echo "NPM Version:"
                    npm --version
                    echo "NPM Cache Directory:"
                    echo $NPM_CONFIG_CACHE
                '''
            }
        }

        stage('Checkout') {
            steps {
                // Clean workspace before checkout
                cleanWs()
                
                // Checkout code from GitHub
                git branch: 'main',
                    url: 'https://github.com/benacton/jenkins-nextjs-app.git'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // Install project dependencies including Tailwind CSS
                sh '''
                    # Create a local npmrc file
                    echo "cache=${NPM_CONFIG_CACHE}" > .npmrc
                    
                    # Install dependencies with specific environment settings
                    npm ci || npm install
                    
                    # Install Tailwind and its dependencies explicitly
                    npm install --save-dev tailwindcss@latest postcss@latest autoprefixer@latest
                    
                    # Create Tailwind config manually instead of using npx
                    cat << EOF > tailwind.config.js
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './src/**/*.{js,ts,jsx,tsx,mdx}',
    './app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
EOF

                    # Create PostCSS config manually
                    cat << EOF > postcss.config.js
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
EOF

                    # Verify configs were created
                    ls -la tailwind.config.js postcss.config.js
                    
                    # List installed packages for verification
                    npm list tailwindcss postcss autoprefixer
                '''
            }
        }
        
        stage('Build') {
            steps {
                // Set NODE_ENV for the build
                withEnv(["NODE_ENV=${NODE_ENV}"]) {
                    sh '''
                        # Build the Next.js application
                        npm run build
                        
                        # List build output directory to verify
                        ls -la .next
                    '''
                }
            }
        }
    }
    
    post {
        success {
            echo 'Build successful!'
        }
        failure {
            echo 'Build failed!'
        }
        always {
            // Clean up sensitive information
            sh '''
                unset EC2_IP
                unset SSH_USER
                unset APP_DIR
                rm -f .npmrc
            '''
        }
    }
}